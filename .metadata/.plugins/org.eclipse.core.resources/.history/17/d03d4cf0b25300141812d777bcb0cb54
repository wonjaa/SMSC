package com.ssm.smsc.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import org.mybatis.spring.support.SqlSessionDaoSupport;

import com.ssm.smsc.domain.Product;
import com.ssm.smsc.domain.User;

public class ProductDaoImpl extends SqlSessionDaoSupport implements ProductDao{

	
	public int selectBoardCount() {
		
		return getSqlSession().selectOne("ProductDao.selectBoardCount");
	}

	@Override
	public List<Product> getAllProductData() {
		String JDBC_DRIVER = "com.mysql.jdbc.Driver";
		String DB_URL = "jdbc:mysql://localhost:3306/smsc";

		String USER = "root";
		String PASS = "smsc";

		Connection conn = null;
		PreparedStatement pstmt = null;

		List<Product> pList = new ArrayList<Product>();
		
		

		try {
			Class.forName(JDBC_DRIVER);

			conn = DriverManager.getConnection(DB_URL, USER, PASS);

			String sql = "SELECT product_no, name, `desc`, number FROM product";

			pstmt = conn.prepareStatement(sql);

			ResultSet rs = pstmt.executeQuery();
			// STEP 5: Extract data from result set
			while (rs.next()) {
				Product product = new Product();
				product.setProduct_no(rs.getInt("product_no"));
				product.setName(rs.getString("name"));
				product.setDesc(rs.getString("desc"));
				product.setNumber(rs.getInt("number"));		
						
				pList.add(product);

			}
			rs.close();
		} catch (SQLException se) {
			se.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					conn.close();
			
				if (conn != null)
					conn.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}// end finally try
		}// end try

		return product;
	}

	@Override
	public Product getProductData(Integer product_no) {

		String JDBC_DRIVER = "com.mysql.jdbc.Driver";
		String DB_URL = "jdbc:mysql://localhost:3306/smsc";

		String USER = "root";
		String PASS = "smsc";

		Connection conn = null;
		PreparedStatement pstmt = null;

		Product product = new Product();
		
		

		try {
			Class.forName(JDBC_DRIVER);

			conn = DriverManager.getConnection(DB_URL, USER, PASS);

			String sql = "SELECT product_no, name, `desc`, number FROM product WHERE product_no =?";

			pstmt = conn.prepareStatement(sql);
			pstmt.setInt(1, product_no);

			ResultSet rs = pstmt.executeQuery();
			// STEP 5: Extract data from result set
			while (rs.next()) {
				product.setProduct_no(rs.getInt("product_no"));
				product.setName(rs.getString("name"));
				product.setDesc(rs.getString("desc"));
				product.setNumber(rs.getInt("number"));		
						

			}
			rs.close();
		} catch (SQLException se) {
			se.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			try {
				if (pstmt != null)
					conn.close();
			
				if (conn != null)
					conn.close();
			} catch (SQLException se) {
				se.printStackTrace();
			}// end finally try
		}// end try

		return product;
	}

	@Override
	public void updateProductData(Product product) {
		// TODO Auto-generated method stub
		getSqlSession().update("ProductDao.updateProductData", product);
	}

	@Override
	public void insertProductData(Product product) {
		// TODO Auto-generated method stub
		getSqlSession().insert("ProductDao.insertProductData", product);
	}

	@Override
	public int getTotalProductNum() {
		// TODO Auto-generated method stub
		return getSqlSession().selectOne("ProductDao.getTotalProductNum");
	}

	@Override
	public void deleteProductData(Integer product_no) {
		// TODO Auto-generated method stub
		getSqlSession().delete("ProductDao.deleteProductData",product_no);
	}

}
