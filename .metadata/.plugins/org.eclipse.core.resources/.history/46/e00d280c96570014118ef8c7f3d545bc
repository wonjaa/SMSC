public class HibernateUtil
    {
        public static final SessionFactory sessionFactory;
        private static ServiceRegistry serviceRegistry;

        static
        {
            try
            {
                // Create the SessionFactory from hibernate.cfg.xml
                Configuration configuration = new Configuration();
                configuration.configure();

                serviceRegistry = 
                new ServiceRegistryBuilder().applySettings(configuration.getProperties()).buildServiceRegistry();
                sessionFactory = configuration.buildSessionFactory(serviceRegistry);

                // sessionFactory = new
                // Configuration().configure().buildSessionFactory(); //deprecated
            }
            catch (Throwable ex)
            {
                // Make sure you log the exception, as it might be swallowed
                System.err.println("Initial SessionFactory creation failed." + ex);
                throw new ExceptionInInitializerError(ex);
            }
        }

        public static final ThreadLocal<Session> session = new ThreadLocal<Session>();

        public static Session getCurrentSession() throws HibernateException
        {
            Session s = session.get();
            // Open a new Session, if this thread has none yet
            if (s == null)
            {
                s = sessionFactory.openSession();
                // Store it in the ThreadLocal variable
                session.set(s);
            }
            return s;
        }

        public static void closeSession() throws HibernateException
        {
            Session s = (Session) session.get();
            if (s != null)
                s.close();
            session.set(null);
        }
    }
